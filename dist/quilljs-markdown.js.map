{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/tags/header/meta.js","webpack:///./src/tags/AbstractTag.js","webpack:///./src/tags/header/index.js","webpack:///./src/tags/blockquote/meta.js","webpack:///./src/tags/blockquote/index.js","webpack:///./src/tags/blockquote/fulltext.js","webpack:///./src/tags/bold/meta.js","webpack:///./src/tags/bold/index.js","webpack:///./src/tags/checkbox/meta.js","webpack:///./src/tags/checkbox/fulltext-checked.js","webpack:///./src/tags/checkbox/fulltext-unchecked.js","webpack:///./src/tags/inlinecode/meta.js","webpack:///./src/tags/inlinecode/index.js","webpack:///./src/tags/italics/meta.js","webpack:///./src/tags/italics/index.js","webpack:///./src/tags/link/meta.js","webpack:///./src/tags/link/index.js","webpack:///./src/tags/link/fulltext.js","webpack:///./src/tags/listn/meta.js","webpack:///./src/tags/listn/fulltext.js","webpack:///./src/tags/listb/meta.js","webpack:///./src/tags/listb/fulltext.js","webpack:///./src/tags/codeblock/meta.js","webpack:///./src/tags/codeblock/index.js","webpack:///./src/tags/codeblock/fulltext.js","webpack:///./src/tags/strikethrough/meta.js","webpack:///./src/tags/strikethrough/index.js","webpack:///./src/tags/index.js","webpack:///./src/app.js","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","applyHtmlTags","map","tag","toLowerCase","AbstractTag","tagName","defaultPattern","tags","pattern","ignoreTags","Array","isArray","reduce","allowTags","includes","push","Header","quillJS","_getCustomPatternOrDefault","getAction","_meta","meta","activeTags","_getActiveTagsWithoutIgnore","this","action","text","selection","Promise","resolve","match","exec","length","find","size","line","getLine","index","getIndex","setTimeout","formatLine","deleteText","Blockquote","originalText","formatText","input","release","contentIndex","getSelection","format","startOffset","Bold","lineStart","annotatedText","matchedText","startIndex","insertText","bold","Checkbox","replaceText","split","splice","join","inlineCode","test","message","replace","code","matchedToken","firstToken","getText","secondToken","isFirstLine","adjustPosition","deleteEndOffset","italic","Link","linkStartIndex","search","hrefText","hrefLink","removeOffset","slice","start","beginOffset","depth","filter","e","list","indent","offsetText","Codeblock","newLinePosition","cursorIndex","block","blockText","domNode","textContent","lineOffset","_text","strike","TagsOperators","getOperatorsAll","supportInlineTags","InlineCode","Strikethrough","Italics","supportfullTextTags","CheckBoxChecked","CheckBoxUnchecked","ListOfNumberFulltext","ListOfBulletFulltext","BlockquoteFulltext","CodeblockFullText","LinkFullText","fullTextTags","MarkdownActivity","onTextChangeBound","onTextChange","on","actionCharacters","whiteSpace","newLine","asterisk","rightParenthesis","grave","tilde","underscore","matches","fullMatches","getFullTextOperatorsAll","off","delta","oldContents","source","cursorOffset","ops","retain","inputText","insert","removeLine","insertDelta","onRemoveElement","delete","cursorOffsetFixed","tokens","_offset","firstIndex","_targetText","onFullTextExecute","result","forEach","onInlineExecute","offset","getFormat","virtualSelection","formatLineStart","copiedTexts","beforeNode","beforeLineText","releaseTag","range","lineItem","QuillMarkdown"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,sCClFtC,eAACC,GACd,MAAO,CACLC,cAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,UAAUC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,0KCgBlEC,E,wMAjBeL,EAASM,EAASC,GAC5C,OAAOP,EAAQQ,MAAQR,EAAQQ,KAAKF,IAAYN,EAAQQ,KAAKF,GAASG,QAAUT,EAAQQ,KAAKF,GAASG,QAAUF,I,kDAGrFC,EAAME,GACjC,OAAIC,MAAMC,QAAQF,GACTF,EAAKK,QAAO,SAACC,EAAWX,GAI7B,OAHKO,EAAWK,SAASZ,IACvBW,EAAUE,KAAKb,EAAIC,eAEdU,IACN,IAEEN,O,qxEC4BIS,E,sQAtCb,WAAaC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,kBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,SACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,gBACnE,EAAK6C,UAAU5B,KAAf,MACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAMC,EAAQtB,EAAQuB,KAAKL,GAC3B,GAAKI,GAAU,EAAKR,WAAWU,QAAW,EAAKV,WAAWW,MAAK,SAAA/B,GAAG,MAAY,WAARA,KAAtE,CAIA,IAAMgC,EAAOJ,EAAM,GAAGE,OACfG,EAPsD,EAO9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OAPe,MAQvDA,EAAQ,EAAKpB,QAAQqB,SAASH,GAEpC,IAAK,EAAKb,WAAWR,SAAhB,WAA6BoB,EAAO,IACvC,OAAOL,GAAQ,GAGjBU,YAAW,WACT,EAAKtB,QAAQuB,WAAWH,EAAO,EAAG,SAAUH,EAAO,GACnD,EAAKjB,QAAQwB,WAAWJ,EAAOH,GAC/BL,GAAQ,KACP,QAfDA,GAAQ,a,8BAlBGzB,GCHN,WAACL,GACd,MAAO,CACLC,cAAe,CAAC,cAAcC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,qvEC4ClCuC,E,sQA1Cb,WAAazB,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,kBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,aACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,WACnE,EAAK6C,UAAU5B,KAAf,MACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAMC,EAAQtB,EAAQuB,KAAKL,GAC3B,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAIA,IAAMW,EAAeb,EAAM,IAAM,GACjCS,YAAW,WACT,EAAKtB,QAAQ2B,WAAWjB,EAAUU,MAAOP,EAAMe,MAAMb,OAAS,EAAG,cAAc,GAC/E,EAAKf,QAAQwB,WACXd,EAAUU,MAAQM,EAAaX,OAC/BW,EAAaX,QAEfH,GAAQ,KACP,QAXDA,GAAQ,OAaZiB,QAAS,WACPP,YAAW,WACT,IAAMQ,EAAe,EAAK9B,QAAQ+B,eAAeX,MAGlC,IAJA,EAGI,EAAKpB,QAAQmB,QAAQW,GAHzB,OAIG,EAAK9B,QAAQgC,OAAO,cAAc,KACnD,U,8BArCc7C,G,8yCCmCVsC,E,sQAlCb,WAAazB,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,kBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,aACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,mBACnE,EAAK6C,UAAU5B,KAAf,MACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAMC,EAAQtB,EAAQuB,KAAKL,GAC3B,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAIA,IAAMW,EAAeb,EAAM,IAAM,GACjCS,YAAW,WACT,IAAMW,EAAcvB,EAAUU,MAAQ,EACtC,EAAKpB,QAAQwB,WAAWS,EAAa,GACrCX,YAAW,WACT,EAAKtB,QAAQuB,WAAWU,EAAaP,EAAaX,OAAS,EAAG,cAAc,GAC5EH,GAAQ,KACP,KACF,QAXDA,GAAQ,a,8BAlBOzB,GCHV,WAACL,GACd,MAAO,CACLC,cAAe,CAAC,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,qvECsC5BgD,E,sQApCb,WAAalC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,kBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,OACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,4BACnE,EAAK6C,UAAU5B,KAAf,MACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,EAAS4C,GAA3B,OAAyC,IAAIxB,SAAQ,SAACC,GAC5D,IAAIC,EAAQtB,EAAQuB,KAAKL,GAD+C,IAEjCI,EAFiC,GAEjEuB,EAFiE,KAEhDC,EAFgD,KAGlEC,EAAaH,EAAYtB,EAAMO,OACjCX,EAAKI,MAAM,kBAAqB,EAAKR,WAAWU,OAKpDO,YAAW,WACT,EAAKtB,QAAQwB,WAAWc,EAAYF,EAAcrB,QAClDO,YAAW,WACT,EAAKtB,QAAQuC,WAAWD,EAAYD,EAAa,CAAEG,MAAM,IACzD,EAAKxC,QAAQgC,OAAO,QAAQ,GAC5BpB,GAAQ,QAET,GAXDA,GAAQ,a,8BApBCzB,GCHJ,WAACL,GACd,MAAO,CACLC,cAAe,CAAC,YAAYC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,kwECsChCuD,G,wQApCb,WAAazC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,mBACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,WAAY,gBACpE,EAAKoB,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GAEjD,GADcrB,EAAQuB,KAAKL,IACZ,EAAKJ,WAAWU,OAA/B,CAF6D,IAMtDG,EANsD,EAM9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OANe,MAOvDA,EAAQ,EAAKpB,QAAQqB,SAASH,GACpCI,YAAW,WACT,IAAMoB,EAAcjC,EAAKkC,MAAM,QAAQC,OAAO,EAAG,GAAGC,KAAK,IACzD,EAAK7C,QAAQuC,WAAWnB,EAAOsB,GAC/B,EAAK1C,QAAQwB,WAAWJ,EAAQsB,EAAY3B,OAAS,EAAGN,EAAKM,QAC7DO,YAAW,WACT,EAAKtB,QAAQuB,WAAWH,EAAO,EAAG,OAAQ,WAC1CR,GAAQ,QAET,QAbDA,GAAQ,a,gCAlBKzB,G,ywECsCRsD,G,wQArCb,WAAazC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,qBACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,kBACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,IACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GAEjD,GADcrB,EAAQuB,KAAKL,IACZ,EAAKJ,WAAWU,OAA/B,CAF6D,IAMtDG,EANsD,GAM9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OANe,MAOvDA,EAAQ,EAAKpB,QAAQqB,SAASH,GACpCI,YAAW,WACT,IAAIoB,EAAcjC,EAAKkC,MAAM,QAAQ5B,OAAS,EAAIN,EAAKkC,MAAM,QAAQC,OAAO,EAAG,GAAGC,KAAK,IAAMpC,EAC7FiC,EAAcA,EAAYC,MAAM,OAAO5B,OAAS,EAAI2B,EAAYC,MAAM,OAAOC,OAAO,EAAG,GAAGC,KAAK,IAAMH,EACrG,EAAK1C,QAAQuC,WAAWnB,EAAOsB,GAC/B,EAAK1C,QAAQwB,WAAWJ,EAAQsB,EAAY3B,OAAS,EAAGN,EAAKM,QAC7DO,YAAW,WACT,EAAKtB,QAAQuB,WAAWH,EAAO,EAAG,OAAQ,aAC1CR,GAAQ,QAET,QAdDA,GAAQ,a,gCAlBKzB,GCHR,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,ywECuC5B4D,G,wQArCb,WAAa9C,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,OACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,MAAM,SAACU,GAAY,MAAO,oBAAoBgF,KAAKhF,KAAY,QAAQgF,KAAKhF,GAAUA,EAAQ,QAC3J,EAAKmC,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,EAAS4C,GAA3B,OAAyC,IAAIxB,SAAQ,SAACC,GAC5D,IAAIC,EAAQ,oBAAoBC,KAAKL,GACrC,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAFwE,IAOjEqB,EAPiE,GAOhDvB,EAPgD,MAQlEyB,EAAaH,EAAYtB,EAAMO,MACrCE,YAAW,WACT,EAAKtB,QAAQwB,WAAWc,EAAYF,EAAcrB,QAClDO,YAAW,WACT,IAAM0B,EAAUZ,EAAca,QAAQ,KAAM,IAC5C,EAAKjD,QAAQuC,WAAWD,EAAYU,EAAS,CAAEE,MAAM,IACrD,EAAKlD,QAAQuC,WAAWD,EAAaU,EAAQjC,OAAQ,IAAK,CAAEmC,MAAM,IAClEtC,GAAQ,KACP,KACF,QAdDA,GAAQ,a,gCAlBOzB,GCHV,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,WAAWC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,m0HCiD/BgD,G,gMA/Cb,WAAalC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,SACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAA9C,GAAoD,kfAApD,oBACf,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,EAAS4C,GAA3B,OAAyC,IAAIxB,SAAQ,SAACC,GAC5D,IAAIC,EAAQtB,EAAQuB,KAAKL,GACzB,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAFwE,SAOrBF,EAPqB,GAOjEuB,EAPiE,KAOlDe,EAPkD,KAOpCd,EAPoC,KAQlEe,EAAc,EAAKpD,QAAQqD,UAAWlB,EAAYtB,EAAMO,OACxDkC,EAAe,EAAKtD,QAAQqD,UAAWlB,EAAYtB,EAAMO,MAAQ,GAEvE,GAAI+B,IAAiBC,GAAcA,IAAeE,EAAlD,CAMA,IAAMhB,EAAaH,EAAYtB,EAAMO,MAErCE,YAAW,WACT,IAAMiC,GAAe1C,EAAMO,MACrBoC,EAAiBD,EAAcjB,EAAaA,EAAa,EACzDmB,EAAkBF,EAAcnB,EAAcrB,OAASqB,EAAcrB,OAAS,EACpF,EAAKf,QAAQwB,WAAWgC,EAAgBC,GACxC,EAAKzD,QAAQuC,WAAWiB,EAAgBnB,EAAa,CAAEqB,QAAQ,IAC/D,EAAK1D,QAAQgC,OAAO,UAAU,GAC9BpB,GAAQ,KACP,QAfDA,GAAQ,QATRA,GAAQ,a,gCAlBCzB,GCHJ,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,QAAQC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,8zCC4C5ByE,G,wQA1Cb,WAAa3D,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,OACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,+BACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,EAAS4C,GAA3B,OAAyC,IAAIxB,SAAQ,SAACC,GAC5D,IAAMC,EAAQtB,EAAQuB,KAAKL,GACrB6B,EAAaH,EAAYtB,EAAMO,MAC/BwC,EAAiBnD,EAAKoD,OAAOtE,GAC7B8C,EAAc5B,EAAKI,MAAMtB,GAAS,GAClCuE,EAAWrD,EAAKI,MAAM,kBAAkB,GACxCkD,EAAWtD,EAAKI,MAAM,kBAAkB,GACzC,EAAKR,WAAWU,SAKG,IAApB6C,EACFtC,YAAW,WACT,IAAM0C,EAAe1B,EACrB,EAAKtC,QAAQwB,WAAWwC,EAAc3B,EAAYtB,QAClD,EAAKf,QAAQuC,WAAWyB,EAAcF,EAASG,MAAM,EAAGH,EAAS/C,OAAS,GACxE,OAAQgD,EAASE,MAAM,EAAGF,EAAShD,OAAS,IAC9CH,GAAQ,KACP,GAXHA,GAAQ,a,gCAvBCzB,G,8zCC4CJwE,G,wQA3Cb,WAAa3D,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,OACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,+BACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAM0B,EAAa7B,EAAKoD,OAAOtE,GACzB8C,EAAc5B,EAAKI,MAAMtB,GAAS,GAClCuE,EAAWrD,EAAKI,MAAM,kBAAkB,GACxCkD,EAAWtD,EAAKI,MAAM,kBAAkB,GACxCqD,EAAQxD,EAAUU,MAAQ,EAAIkB,EAE/B,EAAKjC,WAAWU,SAKD,IAAhBuB,EACFhB,YAAW,WACT,IACM6C,EADiB,EAAKnE,QAAQqD,QAAQa,EAAQ7B,EAAYtB,OAAQsB,EAAYtB,UAC7CsB,EAAc6B,EAAQ7B,EAAYtB,OAASmD,EAClF,EAAKlE,QAAQwB,WAAW2C,EAAa9B,EAAYtB,QACjD,EAAKf,QAAQuC,WAAW4B,EAAaL,EAASG,MAAM,EAAGH,EAAS/C,OAAS,GACvE,OAAQgD,EAASE,MAAM,EAAGF,EAAShD,OAAS,IAC9CH,GAAQ,KACP,GAZHA,GAAQ,a,gCAvBCzB,GCHJ,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,MAAMC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,ywECuC1ByE,G,wQArCb,WAAa3D,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,KACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,sBACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GAEjD,GADcrB,EAAQuB,KAAKL,IACZ,EAAKJ,WAAWU,OAA/B,CAF6D,IAMtDG,EANsD,GAM9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OANe,MAOvDA,EAAQ,EAAKpB,QAAQqB,SAASH,GACpCI,YAAW,WACT,IAAM8C,EAAQ3D,EAAKkC,MAAM,MAAM,GAAGA,MAAM,IAAI0B,QAAO,SAAAC,GAAC,MAAI,OAAOvB,KAAKuB,MAAIvD,OAClE2B,EAAcjC,EAAKkC,MAAM,MAAMC,OAAO,EAAG,GAAGC,KAAK,IACvD,EAAK7C,QAAQuC,WAAWnB,EAAOsB,GAC/B,EAAK1C,QAAQwB,WAAWJ,EAAQsB,EAAY3B,OAAS,EAAGN,EAAKM,QAC7DO,YAAW,WACT,EAAKtB,QAAQuB,WAAWH,EAAO,EAAG,CAAEmD,KAAM,UAAWC,OAAQJ,IAC7DxD,GAAQ,KACP,KACF,QAdDA,GAAQ,a,gCAlBCzB,GCHJ,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,MAAMC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,ywEC+C1ByE,G,wQA7Cb,WAAa3D,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,KACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,uBACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GAEjD,GADcrB,EAAQuB,KAAKL,IACZ,EAAKJ,WAAWU,OAK/B,GAAMN,EAAKkC,MAAM,MAAM,IAASlC,EAAKkC,MAAM,MAAM,GAAjD,CAP6D,IAYtDzB,EAZsD,GAY9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OAZe,MAavDA,EAAQ,EAAKpB,QAAQqB,SAASH,GAEpCI,YAAW,WACT,IAAImD,EAAa,oBAAoB1B,KAAKtC,GAAQA,EAAKwC,QAAQ,IAAK,KAAOxC,EACrE2D,EAAQK,EAAW9B,MAAM,MAAM,GAAGA,MAAM,IAAI0B,QAAO,SAAAC,GAAC,MAAI,OAAOvB,KAAKuB,MAAIvD,OAC1E2B,EAAc+B,EAAW9B,MAAM,MAAM5B,OAAS,EAAI0D,EAAW9B,MAAM,MAAMC,OAAO,EAAG,GAAGC,KAAK,IAAM4B,EACrG,EAAKzE,QAAQuC,WAAWnB,EAAOsB,GAC/B,EAAK1C,QAAQwB,WAAWJ,EAAQsB,EAAY3B,OAAS,EAAGN,EAAKM,QAC7DO,YAAW,WACT,EAAKtB,QAAQuB,WAAWH,EAAO,EAAG,CAAEmD,KAAM,SAAUC,OAAQJ,IAC5DxD,GAAQ,KACP,KACF,QAjBDA,GAAQ,QALRA,GAAQ,a,gCAlBCzB,GCHJ,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,OAAOC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,8zCCkD3BwF,G,wQAhDb,WAAa1E,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,MACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,aACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAMC,EAAQtB,EAAQuB,KAAKL,GAC3B,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAKA,IAAMW,EAAeb,EAAM,IAAM,GACjCS,YAAW,WACT,IAAMgB,EAAa5B,EAAUU,MAAQM,EAAaX,OAClD,EAAKf,QAAQwB,WAAWc,EAAYZ,EAAaX,QACjDO,YAAW,WACT,EAAKtB,QAAQuC,WAAWD,EAAY,MACpC,IAAMqC,EAAkBrC,EAAa,EAAI,KAAKvB,OAAS,EACvD,EAAKf,QAAQuC,WAAWoC,EAAkB,EAAG,MAC7C,EAAK3E,QAAQuB,WAAWoD,EAAkB,EAAG,EAAG,cAAc,GAC9D/D,GAAQ,KACP,KACF,QAfDA,GAAQ,OAiBZiB,QAAS,WACPP,YAAW,WACT,IAAMsD,EAAc,EAAK5E,QAAQ+B,eAAeX,MAC1CyD,EAAQ,EAAK7E,QAAQmB,QAAQyD,GAAa,GAC1CE,EAAYD,EAAME,QAAQC,YAC5BH,GAASC,GAAaA,EAAU7B,QAAQ,KAAM,IAAIlC,QAAU,GAC9D,EAAKf,QAAQgC,OAAO,cAAc,KAEnC,U,gCA3Ca7C,G,ywEC2DTuF,G,wQA1Db,WAAa1E,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,MACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,WACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,GAAlB,OAA8B,IAAIoB,SAAQ,SAACC,GACjD,IAAMC,EAAQtB,EAAQuB,KAAKL,GAC3B,GAAKI,GAAU,EAAKR,WAAWU,OAA/B,CAIA,IAAMW,EAAeb,EAAM,IAAM,GAC1BK,EAPsD,GAO9C,EAAKlB,QAAQmB,QAAQT,EAAUU,OAPe,MAQ7DE,YAAW,WACT,IAAMgB,EAAa,EAAKtC,QAAQqB,SAASH,GACzC,EAAKlB,QAAQwB,WAAWc,EAAYZ,EAAaX,OAAS,GAC1DO,YAAW,WAET,IADA,IAAIJ,EAAO,EAAKlB,QAAQmB,QAAQmB,GAAY,GACrCpB,GAAM,CACX,IAAM+D,EAAa,EAAKjF,QAAQqB,SAASH,GACnCgE,EAAQhE,EAAK6D,QAAQC,YACrBP,EAAavD,EAAK6D,QAAQC,YAAYjE,OAE5C,GADgB,EAAKxB,QAAQwD,KAAKmC,GAIhC,OAFA,EAAKlF,QAAQwB,WAAWyD,EAAYC,EAAMnE,aAC1CH,GAAQ,GAGV,EAAKZ,QAAQuB,WAAW0D,EAAY,EAAG,cAAc,GACrD/D,EAAO,EAAKlB,QAAQmB,QAAQ8D,EAAaR,EAAa,GAAG,GAE3D7D,GAAQ,KACP,KACF,QAzBDA,GAAQ,OA2BZiB,QAAS,WACPP,YAAW,WACT,IAAMsD,EAAc,EAAK5E,QAAQ+B,eAAeX,MAC1CyD,EAAQ,EAAK7E,QAAQmB,QAAQyD,GAAa,GAC1CE,EAAYD,EAAME,QAAQC,YAC5BH,GAASC,GAAaA,EAAU7B,QAAQ,KAAM,IAAIlC,QAAU,GAC9D,EAAKf,QAAQgC,OAAO,cAAc,KAEnC,U,gCArDa7C,GCHT,YAACL,GACd,MAAO,CACLC,cAAe,CAAC,iBAAiBC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,mB,8zCC4CrCgD,G,wQA1Cb,WAAalC,GAAuB,MAAdlB,EAAc,uDAAJ,GAAI,mBAClC,gBACKkB,QAAUA,EACf,EAAK3C,KAAO,gBACZ,EAAKkC,QAAU,EAAKU,2BAA2BnB,EAAS,EAAKzB,KAAM,8BACnE,EAAK6C,UAAU5B,KAAf,OACA,EAAK6B,MAAQC,KACb,EAAKC,WAAa,EAAKC,4BAA4B,EAAKH,MAAMpB,cAAeD,EAAQU,YAPnD,E,iDAUvB,WACX,MAAO,CACLnC,KAAMkD,KAAKlD,KACXkC,QAASgB,KAAKhB,QACdiB,OAAQ,SAACC,EAAMC,EAAWnB,EAAS4C,GAA3B,OAAyC,IAAIxB,SAAQ,SAACC,GAC5D,IAAIC,EAAQtB,EAAQuB,KAAKL,GAEzB,GAAK,EAAKJ,WAAWU,OAArB,CAKA,IAAMqB,EAAgBvB,EAAM,GACtBwB,EAAcxB,EAAM,GACpByB,EAAaH,EAAYtB,EAAMO,MAEjCX,EAAKI,MAAM,iBACbD,GAAQ,GAIVU,YAAW,WACT,EAAKtB,QAAQwB,WAAWc,EAAYF,EAAcrB,QAClD,EAAKf,QAAQuC,WAAWD,EAAYD,EAAa,CAAE8C,QAAQ,IAC3D,EAAKnF,QAAQgC,OAAO,UAAU,GAC9BpB,GAAQ,KACP,QAlBDA,GAAQ,a,gCAnBCzB,G,y/BCwDJiG,G,WA1Cb,WAAapF,GAAiC,IAAxBlB,EAAwB,uDAAd,CAAEQ,KAAM,IAAM,WAC5CiB,KAAKP,QAAUA,EACfO,KAAK8E,gBAAgB/G,KAAKiC,MAC1BA,KAAK+E,kBAAoB,CACvB,IAAIvF,EAAOQ,KAAKP,QAASlB,GAASoB,YAClC,IAAIuB,EAAWlB,KAAKP,QAASlB,GAASoB,YACtC,IAAIgC,EAAK3B,KAAKP,QAASlB,GAASoB,YAChC,IAAIwE,GAAUnE,KAAKP,QAASlB,GAASoB,YACrC,IAAIqF,GAAWhF,KAAKP,QAASlB,GAASoB,YACtC,IAAIsF,GAAcjF,KAAKP,QAASlB,GAASoB,YACzC,IAAIuF,GAAQlF,KAAKP,QAASlB,GAASoB,YACnC,IAAIyD,GAAKpD,KAAKP,QAASlB,GAASoB,aAGlCK,KAAKmF,oBAAsB,CACzB,IAAI3F,EAAOQ,KAAKP,QAASlB,GAASoB,YAClC,IAAIyF,GAAgBpF,KAAKP,QAASlB,GAASoB,YAC3C,IAAI0F,GAAkBrF,KAAKP,QAASlB,GAASoB,YAC7C,IAAI2F,GAAqBtF,KAAKP,QAASlB,GAASoB,YAChD,IAAI4F,GAAqBvF,KAAKP,QAASlB,GAASoB,YAChD,IAAI6F,EAAmBxF,KAAKP,QAASlB,GAASoB,YAC9C,IAAI8F,GAAkBzF,KAAKP,QAASlB,GAASoB,YAC7C,IAAIgC,EAAK3B,KAAKP,QAASlB,GAASoB,YAChC,IAAI+F,GAAa1F,KAAKP,QAASlB,GAASoB,YACxC,IAAIqF,GAAWhF,KAAKP,QAASlB,GAASoB,YACtC,IAAIsF,GAAcjF,KAAKP,QAASlB,GAASoB,YACzC,IAAIuF,GAAQlF,KAAKP,QAASlB,GAASoB,aAGrCK,KAAKjB,KAAL,GAAgBiB,KAAK+E,mBACrB/E,KAAK2F,aAAL,GAAwB3F,KAAKmF,qB,iEAI7B,OAAOnF,KAAKjB,O,gDAIZ,OAAOiB,KAAK2F,kB,2gFC0HDC,G,WA9Kb,WAAanG,GAAuB,IAAdlB,EAAc,uDAAJ,GAAI,WAClCyB,KAAKP,QAAUA,EACfO,KAAKzB,QAAUA,EACfyB,KAAK6F,kBAAoB7F,KAAK8F,aAAa/H,KAAKiC,MAChDA,KAAKP,QAAQsG,GAAG,cAAe/F,KAAK6F,mBACpC7F,KAAKgG,iBAAmB,CACtBC,WAAY,IACZC,QAAS,KACTC,SAAU,IACVC,iBAAkB,IAClBC,MAAO,IACPC,MAAO,IACPC,WAAY,KAEdvG,KAAKf,WAAL,CAAmB,OAAnB,UAA8BV,EAAQU,YAAc,KACpDe,KAAKjB,KAAO,IAAI8F,GAAc7E,KAAKP,QAASlB,GAC5CyB,KAAKwG,QAAUxG,KAAKjB,KAAK+F,kBACzB9E,KAAKyG,YAAczG,KAAKjB,KAAK2H,0B,2DAI7B1G,KAAKP,QAAQkH,IAAI,cAAe3G,KAAK6F,qB,mCAGzBe,EAAOC,EAAaC,GAAQ,WACxC,GAAe,SAAXA,EAAJ,CACA,IAAMC,EAAgBH,EAAMI,IAAI,IAAMJ,EAAMI,IAAI,GAAGC,QAAW,EACxDC,EAAYN,EAAMI,IAAI,GAAGG,QAAWP,EAAMI,IAAI,IAAMJ,EAAMI,IAAI,GAAGG,OAChEC,EAJiC,GAInBpH,KAAKP,QAAQmB,QAAQmG,GAJF,MAKlCM,EAAcT,EAAMI,IAAIvG,MAAK,SAAAsD,GAAC,OAAIA,EAAE3F,eAAe,cAAc,IAC/CwI,EAAMI,IAAIvG,MAAK,SAAAsD,GAAC,OAAIA,EAAE3F,eAAe,cAAqC,OAAvBiJ,EAAYF,SAChEC,EAAW5C,QAAQC,YAAYjE,QAAU,GACxC,CAAC,MAAO,cACZlB,SAAS8H,EAAW5C,QAAQ3F,UAC5CmB,KAAKsH,gBAAgB,CAAEC,OAAQ,IAI9BL,IACDA,EAAU1G,OAAS,EACrBO,WAAU,4BAAC,+HACHyG,EAAoBT,EACpBU,EAASP,EAAU9E,MAAM,MAC3BsF,EAAUF,EAHL,KAKKC,GALL,sEAMQ,EAAKhI,QAAQmB,QAAQ8G,GAN7B,UAMA/G,EANA,+CAQE,GARF,eAUDgH,EAAa,EAAKlI,QAAQqB,SAASH,GACrCiH,EAAc,GAXX,UAYY,EAAKC,kBAAkB9J,KAAK,EAA5B,CAAkC,CAAE8C,MAAO8G,EAAYf,QAAOpG,OAAQ,IAZlF,aAYHsH,EAZG,qCAeEA,EAfF,sBAgBY,EAAKrI,QAAQmB,QAAQ8G,GAhBjC,UAgBI/G,EAhBJ,KAiBGgH,EAAa,EAAKlI,QAAQqB,SAASH,GACpCA,GAAUA,EAAK6D,QAlBjB,wBAmBDsD,GAAS,EAnBR,oCAuBHF,EAAcjH,EAAK6D,QAAQC,aAAe,GAvBvC,UAwBY,EAAKoD,kBAAkB9J,KAAK,EAA5B,CAAkC,CAAE8C,MAAO8G,EAAYf,QAAOpG,OAAQ,IAxBlF,QAwBHsH,EAxBG,uDA2BLF,EAAcjH,EAAK6D,QAAQC,aAAe,GA3BrC,QA6BPiD,GAAWE,EAAYpH,OAAS,EA7BzB,uMA+BR,IAILoG,EAAMI,IAAIlD,QAAO,SAAAC,GAAC,OAAIA,EAAE3F,eAAe,aAAW2J,SAAQ,SAAAhE,GACxD,OAAQA,EAAEoD,QACR,KAAK,EAAKnB,iBAAiBC,WAC3B,KAAK,EAAKD,iBAAiBI,iBAC3B,KAAK,EAAKJ,iBAAiBG,SAC3B,KAAK,EAAKH,iBAAiBK,MAC3B,KAAK,EAAKL,iBAAiBE,QAC3B,KAAK,EAAKF,iBAAiBM,MAC3B,KAAK,EAAKN,iBAAiBO,WACzB,EAAKyB,gBAAgBjK,KAAK,EAA1B,OAKN6I,EAAMI,IAAIlD,QAAO,SAAAC,GAAC,OAAIA,EAAE3F,eAAe,aAAW2J,SAAQ,SAAChE,GACzD,EAAKuD,gBAAgBvD,W,wCAKvB,IAAM5D,EAAYH,KAAKP,QAAQ+B,eAC/B,GAAKrB,EAAL,CAFiB,SAGMH,KAAKP,QAAQmB,QAAQT,EAAUU,OAHrC,GAGVF,EAHU,KAGJsH,EAHI,KAIX/H,EAAOS,EAAK6D,QAAQC,YACpB7C,EAAYzB,EAAUU,MAAQoH,EAC9BxG,EAASzB,KAAKP,QAAQyI,UAAUtG,GACtC,IAAIH,EAAO,gBAAiBA,EAAM,KAAlC,CAPiB,WAWCzB,KAAKwG,SAXN,IAWjB,IAAK,EAAL,qBAAgC,KAAvBlG,EAAuB,QAE9B,GAD6C,mBAAlBA,EAAMtB,QAAyBsB,EAAMtB,QAAQkB,GAAQA,EAAKI,MAAMA,EAAMtB,SAG/F,YADAsB,EAAML,OAAOC,EAAMC,EAAWG,EAAMtB,QAAS4C,IAdhC,mC,yEAoBMuG,G,2HACnBhI,EAAYgI,GAAoBnI,KAAKP,QAAQ+B,eAC3CoF,EAAQuB,EAAiBvB,MAC1BzG,E,0CAAkB,G,YACAH,KAAKP,QAAQmB,QAAQT,EAAUU,O,UAA/CF,E,KAAMsH,E,KAERtH,KAAQsH,EAAS,G,0CAAU,G,UAC1BhB,EAAUL,GAASA,EAAMI,KAAOJ,EAAMI,IAAI,GAAGC,QAAW,EACxDrF,EAAYzB,EAAUU,MAAQoH,EAC9BG,EAAkBnB,EAASA,EAAS,EAAIrF,IACxCH,EAASzB,KAAKP,QAAQyI,UAAUE,IAC3B,gBAAiB3G,EAAM,K,wBAG5BA,EAAM,OAEF4G,EAAczB,EAAMI,IAAIlD,QAAO,SAAAjH,GAAC,OAAIA,EAAEsK,UAAQ1I,KAAI,SAAA5B,GAAC,OAAIA,EAAEsK,UAAQ7E,KAAK,IAC5EtC,KAAKP,QAAQwB,WAAWgG,EAAQoB,EAAY7H,QAC5CR,KAAKP,QAAQuC,WAAWiF,EAAQoB,EAAY3F,QAAQ,MAAO,IAAK,CAAEC,MAAM,IACxE3C,KAAKP,QAAQgC,OAAO,QAAQ,I,mBAEvB,G,WAEH6G,EAAatI,KAAKP,QAAQmB,QAAQgB,EAAY,GAAG,GACjD2G,EAAiBD,GAAcA,EAAW9D,QAAQC,YAClDvE,EAAOS,EAAK6D,QAAQC,YAAc,IACxCtE,EAAUK,OAASL,EAAUU,UAEC,iBAAnB0H,GAA+BA,EAAe/H,OAAS,GAAc,MAATN,G,sBAC/DsI,EAAaxI,KAAKyG,YAAYhG,MAAK,SAAAsD,GAAC,OAAIA,EAAEjH,OAAS6D,EAAK6D,QAAQ3F,QAAQF,oBAC5D6J,EAAWlH,Q,wBAC3BkH,EAAWlH,QAAQnB,G,mBACZ,G,aAIOH,KAAKyG,a,gEACwB,mBADtCnG,E,SAC0BtB,QAAyBsB,EAAMtB,QAAQkB,GAAQA,EAAKI,MAAMA,EAAMtB,U,kCAGlFsB,EAAML,OAAOC,EAAMC,EAAWG,EAAMtB,QAAS4C,G,oNAGvD,G,qJAGQ6G,GACf,IAAMtI,EAAYH,KAAKP,QAAQ+B,eAE/B,GAAIiH,GAA0B,IAAjBA,EAAK,OAAe,CAC/B,IACMC,EADa1I,KAAKP,QAAQmB,QAAQT,EAAUU,OACtB,GACtB2H,EAAaxI,KAAKwG,QAAQ/F,MAAK,SAAAsD,GAAC,OAAIA,EAAEjH,OAAS4L,EAASlE,QAAQ3F,QAAQF,iBAC1E6J,GAAcA,EAAWlH,SAC3BkH,EAAWlH,QAAQnB,S,kCCzKL,oBAAX/D,SACTA,OAAOuM,cAAgBA,IAGVA","file":"quilljs-markdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default (options) => {\n  return {\n    applyHtmlTags: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header'].map(tag => tag.toLowerCase())\n  }\n}\n","class AbstractTag {\n  _getCustomPatternOrDefault (options, tagName, defaultPattern) {\n    return options.tags && options.tags[tagName] && options.tags[tagName].pattern ? options.tags[tagName].pattern : defaultPattern\n  }\n\n  _getActiveTagsWithoutIgnore (tags, ignoreTags) {\n    if (Array.isArray(ignoreTags)) {\n      return tags.reduce((allowTags, tag) => {\n        if (!ignoreTags.includes(tag)) {\n          allowTags.push(tag.toLowerCase())\n        }\n        return allowTags\n      }, [])\n    }\n    return tags\n  }\n}\n\nexport default AbstractTag\n","import meta from './meta.js'\nimport AbstractTag from '../AbstractTag.js'\n\nclass Header extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'header'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^(#){1,6}\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length || !this.activeTags.find(tag => tag === 'header')) {\n          resolve(false)\n          return\n        }\n        const size = match[0].length\n        const [line] = this.quillJS.getLine(selection.index)\n        const index = this.quillJS.getIndex(line)\n\n        if (!this.activeTags.includes(`h${size - 1}`)) {\n          return resolve(false)\n        }\n\n        setTimeout(() => {\n          this.quillJS.formatLine(index, 0, 'header', size - 1)\n          this.quillJS.deleteText(index, size)\n          resolve(true)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Header\n","export default (options) => {\n  return {\n    applyHtmlTags: ['blockquote'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Blockquote extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'blockquote'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^(>)\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const originalText = match[0] || ''\n        setTimeout(() => {\n          this.quillJS.formatText(selection.index, match.input.length - 1, 'blockquote', true)\n          this.quillJS.deleteText(\n            selection.index - originalText.length,\n            originalText.length\n          )\n          resolve(true)\n        }, 0)\n      }),\n      release: () => {\n        setTimeout(() => {\n          const contentIndex = this.quillJS.getSelection().index\n\n          const [, length] = this.quillJS.getLine(contentIndex)\n          if (length === 0) this.quillJS.format('blockquote', false)\n        }, 0)\n      }\n    }\n  }\n}\n\nexport default Blockquote\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Blockquote extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'blockquote'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^\\s{0,99}(>)\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const originalText = match[0] || ''\n        setTimeout(() => {\n          const startOffset = selection.index - 1\n          this.quillJS.deleteText(startOffset, 2)\n          setTimeout(() => {\n            this.quillJS.formatLine(startOffset, originalText.length - 3, 'blockquote', true)\n            resolve(true)\n          }, 0)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Blockquote\n","export default (options) => {\n  return {\n    applyHtmlTags: ['bold'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Bold extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'bold'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /(\\*|_){2}(.+?)(?:\\1){2}/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern, lineStart) => new Promise((resolve) => {\n        let match = pattern.exec(text)\n        const [annotatedText, , matchedText] = match\n        const startIndex = lineStart + match.index\n        if (text.match(/^([*_ \\n]+)$/g) || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        setTimeout(() => {\n          this.quillJS.deleteText(startIndex, annotatedText.length)\n          setTimeout(() => {\n            this.quillJS.insertText(startIndex, matchedText, { bold: true })\n            this.quillJS.format('bold', false)\n            resolve(true)\n          })\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Bold\n","export default (options) => {\n  return {\n    applyHtmlTags: ['checkbox'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Checkbox extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'checkbox-checked'\n    this.pattern = this._getCustomPatternOrDefault(options, 'checkbox', /^(\\[x\\])+\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const [line] = this.quillJS.getLine(selection.index)\n        const index = this.quillJS.getIndex(line)\n        setTimeout(() => {\n          const replaceText = text.split('[x] ').splice(1, 1).join('')\n          this.quillJS.insertText(index, replaceText)\n          this.quillJS.deleteText(index + replaceText.length - 1, text.length)\n          setTimeout(() => {\n            this.quillJS.formatLine(index, 0, 'list', 'checked')\n            resolve(true)\n          })\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Checkbox\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Checkbox extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'checkbox-unchecked'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^(\\[\\s?\\])+\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const [line] = this.quillJS.getLine(selection.index)\n        const index = this.quillJS.getIndex(line)\n        setTimeout(() => {\n          let replaceText = text.split('[ ] ').length > 1 ? text.split('[ ] ').splice(1, 1).join('') : text\n          replaceText = replaceText.split('[] ').length > 1 ? replaceText.split('[] ').splice(1, 1).join('') : replaceText\n          this.quillJS.insertText(index, replaceText)\n          this.quillJS.deleteText(index + replaceText.length - 1, text.length)\n          setTimeout(() => {\n            this.quillJS.formatLine(index, 0, 'list', 'unchecked')\n            resolve(true)\n          })\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Checkbox\n","export default (options) => {\n  return {\n    applyHtmlTags: ['code'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass inlineCode extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'code'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, (value) => { return /(`){1}(.+)(`){1}/g.test(value) && !(/```.*/.test(value)) ? value : null })\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern, lineStart) => new Promise((resolve) => {\n        let match = /(`){1}(.+)(`){1}/g.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        const [annotatedText] = match\n        const startIndex = lineStart + match.index\n        setTimeout(() => {\n          this.quillJS.deleteText(startIndex, annotatedText.length)\n          setTimeout(() => {\n            const message = annotatedText.replace(/`/g, '')\n            this.quillJS.insertText(startIndex, message, { code: true })\n            this.quillJS.insertText(startIndex + message.length, ' ', { code: false })\n            resolve(true)\n          }, 0)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default inlineCode\n","export default (options) => {\n  return {\n    applyHtmlTags: ['italics'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Bold extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'italic'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /(?:^|\\s)(?:(\\*|_)\\s*(?<text1>[^*_]+)\\s*?\\1|(\\*|_){3}\\s*(?<text3>[^*_]*)\\s*\\1{3})(?:$|(?=\\s))/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern, lineStart) => new Promise((resolve) => {\n        let match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        const [annotatedText, matchedToken, matchedText] = match\n        const firstToken = (this.quillJS.getText())[lineStart + match.index]\n        const secondToken = (this.quillJS.getText())[lineStart + match.index + 1]\n\n        if (matchedToken === firstToken && firstToken === secondToken) {\n          resolve(false)\n          // duplicated match string tag. ** or __\n          return\n        }\n\n        const startIndex = lineStart + match.index\n\n        setTimeout(() => {\n          const isFirstLine = !match.index\n          const adjustPosition = isFirstLine ? startIndex : startIndex + 1\n          const deleteEndOffset = isFirstLine ? annotatedText.length : annotatedText.length - 1\n          this.quillJS.deleteText(adjustPosition, deleteEndOffset)\n          this.quillJS.insertText(adjustPosition, matchedText, { italic: true })\n          this.quillJS.format('italic', false)\n          resolve(true)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Bold\n","export default (options) => {\n  return {\n    applyHtmlTags: ['link'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Link extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'link'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /(?:\\[(.+?)\\])(?:\\((.+?)\\))/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern, lineStart) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        const startIndex = lineStart + match.index\n        const linkStartIndex = text.search(pattern)\n        const matchedText = text.match(pattern)[0]\n        const hrefText = text.match(/(?:\\[(.*?)\\])/g)[0]\n        const hrefLink = text.match(/(?:\\((.*?)\\))/g)[0]\n        if (!this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        if (linkStartIndex !== -1) {\n          setTimeout(() => {\n            const removeOffset = startIndex\n            this.quillJS.deleteText(removeOffset, matchedText.length)\n            this.quillJS.insertText(removeOffset, hrefText.slice(1, hrefText.length - 1),\n              'link', hrefLink.slice(1, hrefLink.length - 1))\n            resolve(true)\n          }, 0)\n        } else {\n          resolve(false)\n        }\n      })\n    }\n  }\n}\n\nexport default Link\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Link extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'link'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /(?:\\[(.+?)\\])(?:\\((.+?)\\))/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const startIndex = text.search(pattern)\n        const matchedText = text.match(pattern)[0]\n        const hrefText = text.match(/(?:\\[(.*?)\\])/g)[0]\n        const hrefLink = text.match(/(?:\\((.*?)\\))/g)[0]\n        const start = selection.index - 1 + startIndex\n\n        if (!this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        if (startIndex !== -1) {\n          setTimeout(() => {\n            const inlineModeText = this.quillJS.getText(start - matchedText.length, matchedText.length)\n            const beginOffset = inlineModeText === matchedText ? start - matchedText.length : start\n            this.quillJS.deleteText(beginOffset, matchedText.length)\n            this.quillJS.insertText(beginOffset, hrefText.slice(1, hrefText.length - 1),\n              'link', hrefLink.slice(1, hrefLink.length - 1))\n            resolve(true)\n          }, 0)\n        } else {\n          resolve(false)\n        }\n      })\n    }\n  }\n}\n\nexport default Link\n","export default (options) => {\n  return {\n    applyHtmlTags: ['li'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Link extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'li'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^\\s{0,9}(\\d)+\\.\\s/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const [line] = this.quillJS.getLine(selection.index)\n        const index = this.quillJS.getIndex(line)\n        setTimeout(() => {\n          const depth = text.split('. ')[0].split('').filter(e => /\\s/gi.test(e)).length\n          const replaceText = text.split('. ').splice(1, 1).join('')\n          this.quillJS.insertText(index, replaceText)\n          this.quillJS.deleteText(index + replaceText.length - 1, text.length)\n          setTimeout(() => {\n            this.quillJS.formatLine(index, 0, { list: 'ordered', indent: depth })\n            resolve(true)\n          }, 0)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Link\n","export default (options) => {\n  return {\n    applyHtmlTags: ['ul'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Link extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'ul'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^\\s{0,9}(-|\\*){1}\\s/)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        if (!(text.split('- ')[1]) && !(text.split('* ')[1])) {\n          resolve(false)\n          return\n        }\n\n        const [line] = this.quillJS.getLine(selection.index)\n        const index = this.quillJS.getIndex(line)\n\n        setTimeout(() => {\n          let offsetText = /^\\s{0,9}(\\*){1}\\s/.test(text) ? text.replace('*', '-') : text\n          const depth = offsetText.split('- ')[0].split('').filter(e => /\\s/gi.test(e)).length\n          let replaceText = offsetText.split('- ').length > 1 ? offsetText.split('- ').splice(1, 1).join('') : offsetText\n          this.quillJS.insertText(index, replaceText)\n          this.quillJS.deleteText(index + replaceText.length - 1, text.length)\n          setTimeout(() => {\n            this.quillJS.formatLine(index, 0, { list: 'bullet', indent: depth })\n            resolve(true)\n          }, 0)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Link\n","export default (options) => {\n  return {\n    applyHtmlTags: ['pre'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Codeblock extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'pre'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^(```).*/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        const originalText = match[0] || ''\n        setTimeout(() => {\n          const startIndex = selection.index - originalText.length\n          this.quillJS.deleteText(startIndex, originalText.length)\n          setTimeout(() => {\n            this.quillJS.insertText(startIndex, '\\n')\n            const newLinePosition = startIndex + 1 + '\\n'.length + 1\n            this.quillJS.insertText(newLinePosition - 1, '\\n')\n            this.quillJS.formatLine(newLinePosition - 2, 1, 'code-block', true)\n            resolve(true)\n          }, 0)\n        }, 0)\n      }),\n      release: () => {\n        setTimeout(() => {\n          const cursorIndex = this.quillJS.getSelection().index\n          const block = this.quillJS.getLine(cursorIndex)[0]\n          const blockText = block.domNode.textContent\n          if (block && blockText && blockText.replace('\\n', '').length <= 0) {\n            this.quillJS.format('code-block', false)\n          }\n        }, 0)\n      }\n    }\n  }\n}\n\nexport default Codeblock\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Codeblock extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'pre'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /^(```)/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern) => new Promise((resolve) => {\n        const match = pattern.exec(text)\n        if (!match || !this.activeTags.length) {\n          resolve(false)\n          return\n        }\n        const originalText = match[0] || ''\n        const [line] = this.quillJS.getLine(selection.index)\n        setTimeout(() => {\n          const startIndex = this.quillJS.getIndex(line)\n          this.quillJS.deleteText(startIndex, originalText.length + 1)\n          setTimeout(() => {\n            let line = this.quillJS.getLine(startIndex)[0]\n            while (line) {\n              const lineOffset = this.quillJS.getIndex(line)\n              const _text = line.domNode.textContent\n              const offsetText = line.domNode.textContent.length\n              const isBreak = this.pattern.test(_text)\n              if (isBreak) {\n                this.quillJS.deleteText(lineOffset, _text.length)\n                resolve(true)\n                return\n              }\n              this.quillJS.formatLine(lineOffset, 0, 'code-block', true)\n              line = this.quillJS.getLine(lineOffset + offsetText + 1)[0]\n            }\n            resolve(true)\n          }, 0)\n        }, 0)\n      }),\n      release: () => {\n        setTimeout(() => {\n          const cursorIndex = this.quillJS.getSelection().index\n          const block = this.quillJS.getLine(cursorIndex)[0]\n          const blockText = block.domNode.textContent\n          if (block && blockText && blockText.replace('\\n', '').length <= 0) {\n            this.quillJS.format('code-block', false)\n          }\n        }, 0)\n      }\n    }\n  }\n}\n\nexport default Codeblock\n","export default (options) => {\n  return {\n    applyHtmlTags: ['strikethrough'].map(tag => tag.toLowerCase())\n  }\n}\n","import AbstractTag from '../AbstractTag.js'\nimport meta from './meta.js'\n\nclass Bold extends AbstractTag {\n  constructor (quillJS, options = {}) {\n    super()\n    this.quillJS = quillJS\n    this.name = 'strikethrough'\n    this.pattern = this._getCustomPatternOrDefault(options, this.name, /(?:~|_){2}(.+?)(?:~|_){2}/g)\n    this.getAction.bind(this)\n    this._meta = meta()\n    this.activeTags = this._getActiveTagsWithoutIgnore(this._meta.applyHtmlTags, options.ignoreTags)\n  }\n\n  getAction () {\n    return {\n      name: this.name,\n      pattern: this.pattern,\n      action: (text, selection, pattern, lineStart) => new Promise((resolve) => {\n        let match = pattern.exec(text)\n\n        if (!this.activeTags.length) {\n          resolve(false)\n          return\n        }\n\n        const annotatedText = match[0]\n        const matchedText = match[1]\n        const startIndex = lineStart + match.index\n\n        if (text.match(/^([~_ \\n]+)$/g)) {\n          resolve(false)\n          return\n        }\n\n        setTimeout(() => {\n          this.quillJS.deleteText(startIndex, annotatedText.length)\n          this.quillJS.insertText(startIndex, matchedText, { strike: true })\n          this.quillJS.format('strike', false)\n          resolve(true)\n        }, 0)\n      })\n    }\n  }\n}\n\nexport default Bold\n","import Header from './header/index.js'\nimport Blockquote from './blockquote/index.js'\nimport BlockquoteFulltext from './blockquote/fulltext.js'\nimport Bold from './bold/index.js'\nimport CheckBoxChecked from './checkbox/fulltext-checked.js'\nimport CheckBoxUnchecked from './checkbox/fulltext-unchecked.js'\nimport InlineCode from './inlinecode/index.js'\nimport Italics from './italics/index.js'\nimport Link from './link/index.js'\nimport LinkFullText from './link/fulltext.js'\nimport ListOfNumberFulltext from './listn/fulltext.js'\nimport ListOfBulletFulltext from './listb/fulltext.js'\nimport Codeblock from './codeblock/index.js'\nimport CodeblockFullText from './codeblock/fulltext.js'\nimport Strikethrough from './strikethrough/index.js'\n\nclass TagsOperators {\n  constructor (quillJS, options = { tags: {} }) {\n    this.quillJS = quillJS\n    this.getOperatorsAll.bind(this)\n    this.supportInlineTags = [\n      new Header(this.quillJS, options).getAction(),\n      new Blockquote(this.quillJS, options).getAction(),\n      new Bold(this.quillJS, options).getAction(),\n      new Codeblock(this.quillJS, options).getAction(),\n      new InlineCode(this.quillJS, options).getAction(),\n      new Strikethrough(this.quillJS, options).getAction(),\n      new Italics(this.quillJS, options).getAction(),\n      new Link(this.quillJS, options).getAction()\n    ]\n\n    this.supportfullTextTags = [\n      new Header(this.quillJS, options).getAction(),\n      new CheckBoxChecked(this.quillJS, options).getAction(),\n      new CheckBoxUnchecked(this.quillJS, options).getAction(),\n      new ListOfNumberFulltext(this.quillJS, options).getAction(),\n      new ListOfBulletFulltext(this.quillJS, options).getAction(),\n      new BlockquoteFulltext(this.quillJS, options).getAction(),\n      new CodeblockFullText(this.quillJS, options).getAction(),\n      new Bold(this.quillJS, options).getAction(),\n      new LinkFullText(this.quillJS, options).getAction(),\n      new InlineCode(this.quillJS, options).getAction(),\n      new Strikethrough(this.quillJS, options).getAction(),\n      new Italics(this.quillJS, options).getAction()\n    ]\n\n    this.tags = [...this.supportInlineTags]\n    this.fullTextTags = [...this.supportfullTextTags]\n  }\n\n  getOperatorsAll () {\n    return this.tags\n  }\n\n  getFullTextOperatorsAll () {\n    return this.fullTextTags\n  }\n}\n\nexport default TagsOperators\n","import TagsOperators from './tags/index.js'\n\nclass MarkdownActivity {\n  constructor (quillJS, options = {}) {\n    this.quillJS = quillJS\n    this.options = options\n    this.onTextChangeBound = this.onTextChange.bind(this)\n    this.quillJS.on('text-change', this.onTextChangeBound)\n    this.actionCharacters = {\n      whiteSpace: ' ',\n      newLine: '\\n',\n      asterisk: '*',\n      rightParenthesis: ')',\n      grave: '`',\n      tilde: '~',\n      underscore: '_'\n    }\n    this.ignoreTags = ['PRE', ...(options.ignoreTags || [])]\n    this.tags = new TagsOperators(this.quillJS, options)\n    this.matches = this.tags.getOperatorsAll()\n    this.fullMatches = this.tags.getFullTextOperatorsAll()\n  }\n\n  destroy () {\n    this.quillJS.off('text-change', this.onTextChangeBound)\n  }\n\n  onTextChange (delta, oldContents, source) {\n    if (source !== 'user') return\n    const cursorOffset = (delta.ops[0] && delta.ops[0].retain) || 0\n    const inputText = delta.ops[0].insert || (delta.ops[1] && delta.ops[1].insert)\n    const [removeLine] = this.quillJS.getLine(cursorOffset)\n    const insertDelta = delta.ops.find(e => e.hasOwnProperty('insert')) || {}\n    const isRemoveCommand = delta.ops.find(e => e.hasOwnProperty('delete')) || insertDelta.insert === '\\n'\n    if (isRemoveCommand && removeLine.domNode.textContent.length <= 1) {\n      const rangeElements = ['PRE', 'BLOCKQUOTE']\n      if (rangeElements.includes(removeLine.domNode.tagName)) {\n        this.onRemoveElement({ delete: 1 })\n      }\n    }\n\n    if (!inputText) return\n    if (inputText.length > 1) {\n      setTimeout(async () => {\n        const cursorOffsetFixed = cursorOffset\n        const tokens = inputText.split('\\n')\n        let _offset = cursorOffsetFixed\n        // eslint-disable-next-line no-unused-vars\n        for (let v of tokens) {\n          const [line] = this.quillJS.getLine(_offset)\n          if (!line) {\n            return 0\n          }\n          const firstIndex = this.quillJS.getIndex(line)\n          let _targetText = ''\n          let result = await this.onFullTextExecute.bind(this)({ index: firstIndex, delta, length: 0 })\n\n          if (result) {\n            while (result) {\n              const [line] = this.quillJS.getLine(_offset)\n              const firstIndex = this.quillJS.getIndex(line)\n              if (!line || !(line.domNode)) {\n                result = false\n                break\n              }\n\n              _targetText = line.domNode.textContent || ''\n              result = await this.onFullTextExecute.bind(this)({ index: firstIndex, delta, length: 0 })\n            }\n          } else {\n            _targetText = line.domNode.textContent || ''\n          }\n          _offset += _targetText.length + 1\n        }\n      }, 0)\n      return\n    }\n\n    delta.ops.filter(e => e.hasOwnProperty('insert')).forEach(e => {\n      switch (e.insert) {\n        case this.actionCharacters.whiteSpace:\n        case this.actionCharacters.rightParenthesis:\n        case this.actionCharacters.asterisk:\n        case this.actionCharacters.grave:\n        case this.actionCharacters.newLine:\n        case this.actionCharacters.tilde:\n        case this.actionCharacters.underscore:\n          this.onInlineExecute.bind(this)()\n          break\n      }\n    })\n\n    delta.ops.filter(e => e.hasOwnProperty('delete')).forEach((e) => {\n      this.onRemoveElement(e)\n    })\n  }\n\n  onInlineExecute () {\n    const selection = this.quillJS.getSelection()\n    if (!selection) return\n    const [line, offset] = this.quillJS.getLine(selection.index)\n    const text = line.domNode.textContent\n    const lineStart = selection.index - offset\n    const format = this.quillJS.getFormat(lineStart)\n    if (format['code-block'] || format['code']) {\n      // if exists text in code-block, to skip.\n      return\n    }\n    for (let match of this.matches) {\n      const matchedText = typeof match.pattern === 'function' ? match.pattern(text) : text.match(match.pattern)\n      if (matchedText) {\n        match.action(text, selection, match.pattern, lineStart)\n        return\n      }\n    }\n  }\n\n  async onFullTextExecute (virtualSelection) {\n    let selection = virtualSelection || this.quillJS.getSelection()\n    const delta = virtualSelection.delta\n    if (!selection) return false\n    const [line, offset] = this.quillJS.getLine(selection.index)\n\n    if (!line || offset < 0) return false\n    const retain = (delta && delta.ops && delta.ops[0].retain) || 0\n    const lineStart = selection.index - offset\n    const formatLineStart = retain ? retain - 1 : lineStart\n    const format = this.quillJS.getFormat(formatLineStart)\n    if (format['code-block'] || format['code']) {\n      // if exists text in code-block, to skip.\n\n      if (format['code']) {\n        // ignore all styles when copied text in code block.\n        const copiedTexts = delta.ops.filter(d => d.insert).map(d => d.insert).join('')\n        this.quillJS.deleteText(retain, copiedTexts.length)\n        this.quillJS.insertText(retain, copiedTexts.replace(/\\n/g, ''), { code: true })\n        this.quillJS.format('code', false)\n      }\n      return false\n    }\n    const beforeNode = this.quillJS.getLine(lineStart - 1)[0]\n    const beforeLineText = beforeNode && beforeNode.domNode.textContent\n    const text = line.domNode.textContent + ' '\n    selection.length = selection.index++\n    // remove block rule.\n    if (typeof beforeLineText === 'string' && beforeLineText.length > 0 && text === ' ') {\n      const releaseTag = this.fullMatches.find(e => e.name === line.domNode.tagName.toLowerCase())\n      if (releaseTag && releaseTag.release) {\n        releaseTag.release(selection)\n        return false\n      }\n    }\n\n    for (let match of this.fullMatches) {\n      const matchedText = typeof match.pattern === 'function' ? match.pattern(text) : text.match(match.pattern)\n      if (matchedText) {\n        // eslint-disable-next-line no-return-await\n        return await match.action(text, selection, match.pattern, lineStart)\n      }\n    }\n    return false\n  }\n\n  onRemoveElement (range) {\n    const selection = this.quillJS.getSelection()\n    // if removed one item before, editor need to clear item.\n    if (range && range.delete === 1) {\n      const removeItem = this.quillJS.getLine(selection.index)\n      const lineItem = removeItem[0]\n      const releaseTag = this.matches.find(e => e.name === lineItem.domNode.tagName.toLowerCase())\n      if (releaseTag && releaseTag.release) {\n        releaseTag.release(selection)\n      }\n    }\n  }\n}\n\nexport default MarkdownActivity\n","import QuillMarkdown from './src/app.js'\n\nif (typeof window !== 'undefined') {\n  window.QuillMarkdown = QuillMarkdown\n}\n\nexport default QuillMarkdown\n"],"sourceRoot":""}